# Nama workflow yang akan muncul di tab Actions GitHub
name: Deploy Go App to Server

# Pemicu: Workflow ini akan berjalan setiap kali ada push ke branch 'main'
on:
  push:
    branches: [ "master" ]

jobs:
  # Job pertama: Membangun dan Mendorong Docker Image
  build-and-push:
    runs-on: ubuntu-latest # Menggunakan mesin virtual Ubuntu dari GitHub
    steps:
      # 1. Mengambil kode dari repositori
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Login ke Docker Hub menggunakan secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Membangun Docker image dari Dockerfile dan mendorongnya ke Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Konteks build adalah root folder proyek
          push: true # Mendorong image setelah build berhasil
          tags: ${{ secrets.DOCKER_USERNAME }}/go-postgres-auth-crud:latest # Ganti dengan nama image Anda

  # Job kedua: Deploy ke server
  deploy:
    # Job ini baru berjalan setelah 'build-and-push' selesai
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # 1. Login ke server via SSH dan jalankan perintah deployment
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Pindah ke direktori aplikasi di server
            cd /home/ubuntu/app 

            # Menulis isi secret SERVER_ENV ke dalam file .env di server
            echo "${{ secrets.SERVER_ENV }}" > .env

            # Mengambil image terbaru dari Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/go-postgres-auth-crud:latest

            # Menghentikan dan menjalankan ulang container dengan docker-compose
            # Docker Compose akan otomatis menggunakan image yang baru di-pull
            docker-compose down
            docker-compose up -d

            # (Opsional) Membersihkan image lama yang tidak terpakai
            docker image prune -f